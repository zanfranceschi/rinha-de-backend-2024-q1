version: '3.5'

services:
  api1: &api1
    image: wesleyegberto/rinha-backend-2024-q1-native
    hostname: api1
    networks:
      - rinha-backend
    depends_on:
      db:
        condition: service_healthy
    environment: &env
      PORT: 8080
      DATABASE_HOST: db
      DATABASE_NAME: rinhadb
      DATABASE_USERNAME: rinhabackend
      DATABASE_PASSWORD: rinhabackend
      POOL_SIZE: 18
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.40'
          memory: '130MB'

  api2:
    <<: *api1
    hostname: api2

  nginx:
    image: nginx:1.25.3
    networks:
      - rinha-backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    expose:
      - "9999"
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '15MB'

  db:
    image: postgres
    hostname: db
    networks:
      - rinha-backend
    environment:
      - POSTGRES_USER=rinhabackend
      - POSTGRES_PASSWORD=rinhabackend
      - POSTGRES_DB=rinhadb
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c max_connections=64 -c shared_buffers=96MB -c work_mem=16MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "rinhadb"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.60'
          memory: '275MB'

networks:
  rinha-backend:
    driver: bridge
