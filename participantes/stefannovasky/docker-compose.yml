version: "3.9"

services:
  api-1:
    image: novasky/rinha-backend-csharp:latest
    hostname: api-1
    container_name: rinha-api-1
    ports:
      - "8081:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - POSTGRESQL_CONNECTION_STRING=Host=postgres-db;Username=root;Password=root;Database=rinha-db;MaxPoolSize=30;MinPoolSize=5;Connection Pruning Interval=1;Connection Idle Lifetime=2;Enlist=false;No Reset On Close=true;Pooling=true
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "60MB"
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - rinha-network

  api-2:
    image: novasky/rinha-backend-csharp:latest
    hostname: api-2
    container_name: rinha-api-2
    ports:
      - "8082:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - POSTGRESQL_CONNECTION_STRING=Host=postgres-db;Username=root;Password=root;Database=rinha-db;MaxPoolSize=30;MinPoolSize=5;Connection Pruning Interval=1;Connection Idle Lifetime=2;Enlist=false;No Reset On Close=true;Pooling=true
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "60MB"
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - rinha-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-1
      - api-2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"
    networks:
      - rinha-network

  postgres-db:
    image: "postgres:latest"
    hostname: postgres-db
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "400MB"
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: rinha-db
    command: postgres -c 'max_connections=400' -c 'checkpoint_timeout=600'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d rinha-db" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - rinha-network

networks:
  rinha-network:
    driver: bridge
