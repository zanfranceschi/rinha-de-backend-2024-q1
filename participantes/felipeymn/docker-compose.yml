version: '3.9'

services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    # image: rinha-de-backend-2024-q1:latest
    image: felipeymn/rinha-de-backend-2024-q1:latest
    hostname: api01
    environment:
    - RINHA_DB_CONN_STRING=postgres://florence:machine@db/florence
    - MAX_CONNS=20
    - MIN_CONNS=20
    
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "20MB"
  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api 
    hostname: api02

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
        # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999" 
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "30MB"

  db:
    hostname: db
    image: postgres:latest
    # set shared memory limit when using docker-compose
    volumes:
       - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
       - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf  
    environment:
      POSTGRES_USER: florence
      POSTGRES_PASSWORD: machine
    deploy:
      resources:
        limits:
          cpus: "0.9"
          memory: "480MB"

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
