services:
  api1: &api
    image: jeiferson/rinhabackend-imperative:latest
#    image: rinha-backend-imperative
#    build: ../
    hostname: api1
    environment:
      - JDBC_URL=jdbc:postgresql://database:5432/rinhabackend
      - DB_USERNAME=rinhabackend
      - DB_PASSWORD=rinhabackend
      - PORT=8081
      - VIRTUAL_THREADS=false
      - POOL_SIZE=10
      - TOMCAT_THREAD_POOL=200
#    depends_on:
#      postgres:
#        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "150MB"

  api2:
    <<: *api
    hostname: api2
    environment:
      - JDBC_URL=jdbc:postgresql://database:5432/rinhabackend
      - DB_USERNAME=rinhabackend
      - DB_PASSWORD=rinhabackend
      - PORT=8082
      - VIRTUAL_THREADS=false
      - POOL_SIZE=10
      - TOMCAT_THREAD_POOL=200

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - 9999:9999
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  postgres:
    image: postgres:16.1
    hostname: database
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=rinhabackend
      - POSTGRES_PASSWORD=rinhabackend
      - POSTGRES_DB=rinhabackend
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready", "-U", "rinhabackend", "-d", "rinhabackend" ]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#    ports:
#      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '200MB'