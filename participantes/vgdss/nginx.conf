user nobody nogroup;
pid /var/run/nginx.pid;

worker_processes 1;       # Não há CPU suficiente para mais do que 1 processo.

events {
    worker_connections 1024; # Reduzido de 1024 para economizar memória, já que a carga é de ~251 req/s.
    use                epoll;
    accept_mutex       off; # set to 'on' if nginx worker_processes > 1
    multi_accept       on;
}

http {
    access_log off; # /var/log/nginx/access.log combined;
    error_log stderr;

    default_type application/json;

    sendfile off;   # Manter desativado, já que está servindo principalmente APIs e não arquivos estáticos.
    tcp_nopush off; # Desativar, pois não estamos preocupados com otimização de cabeçalhos.
    tcp_nodelay on; # Manter ativado para enviar respostas HTTP rapidamente.

    keepalive_requests                    1000;  
    keepalive_timeout                     120;    

    proxy_connect_timeout 75s;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

    upstream api {
        server    127.0.0.1:8001; # API 1
        server    127.0.0.1:8002; # API 2
        keepalive 32;
    }

    server {
        listen 9999;

        #server_tokens                           off;
        #client_max_body_size                    20M;        
                
        location / {
            proxy_pass http://api;
            proxy_http_version                  1.1;
            proxy_set_header Connection         "";
            #proxy_ignore_client_abort           on;
            #proxy_connect_timeout               65s;
            #proxy_read_timeout                  65s;
            #proxy_send_timeout                  65s;
            #proxy_redirect                      off;
            #proxy_buffering                     off;            
        }
    }
}
