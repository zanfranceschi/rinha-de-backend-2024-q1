version: "3.5"

services:
  rinhadb:
    image: postgres:latest
    hostname: RinhaDB
    environment:
      - POSTGRES_PASSWORD=Q1w2e3r4t5y6!
      - POSTGRES_USER=postgres
      - POSTGRES_DB=RinhaDeBackend
    volumes:
      - ./sobeabodega.sql:/docker-entrypoint-initdb.d/sobeabodega.sql
      - postgresql_socket:/var/run/postgresql
    command: postgres -c max_connections=200 -c synchronous_commit=off -c fsync=off -c full_page_writes=off -c effective_io_concurrency=200 -c wal_level=minimal -c max_wal_senders=0 -c shared_buffers=128MB -c effective_cache_size=256MB -c checkpoint_timeout=30min
    deploy:
      resources:
        limits:
          cpus: "0.65"
          memory: "400MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost -d RinhaDeBackend"]
      interval: 5s
      timeout: 5s
      retries: 5
    network_mode: host

  api01: &api
    image: wstumpf/rinha-api:latest
    hostname: api01
    environment:
      - INSTANCE_ID=01
    volumes:
      - postgresql_socket:/var/run/postgresql
      - kestrel_socket_api01:/tmp
    depends_on:
      rinhadb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "50MB"
    network_mode: host

  api02:
    <<: *api
    hostname: api02
    environment:
      - INSTANCE_ID=02
    volumes:
      - postgresql_socket:/var/run/postgresql
      - kestrel_socket_api02:/tmp
    depends_on:
      rinhadb:
        condition: service_healthy
    network_mode: host

  chmod:
    image: alpine
    command: >
      /bin/sh -c "
      sleep 2 &&
      chmod 777 /tmp01/api_01.sock &&
      chmod 777 /tmp02/api_02.sock &&
      sleep 2"
    volumes:
      - kestrel_socket_api01:/tmp01
      - kestrel_socket_api02:/tmp02
    depends_on:
      - api01
      - api02
    network_mode: host

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - kestrel_socket_api01:/tmp01
      - kestrel_socket_api02:/tmp02
    depends_on:
      chmod:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "50MB"
    network_mode: host

volumes:
  postgresql_socket:
  kestrel_socket_api01:
  kestrel_socket_api02:
