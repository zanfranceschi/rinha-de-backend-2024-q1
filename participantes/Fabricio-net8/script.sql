/*CREATE TABLE public."__EFMigrationsHistory" (
	"MigrationId" varchar(150) NOT NULL,
	"ProductVersion" varchar(32) NOT NULL,
	CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

INSERT INTO public."__EFMigrationsHistory"
("MigrationId", "ProductVersion")
VALUES('20240207025439_InitialCreate', '8.0.1');*/

CREATE TABLE public."Clientes" (
	"Id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"Limite" int4 NULL,
	"Saldoinicial" int8 NULL,
	CONSTRAINT "PK_Clientes" PRIMARY KEY ("Id")
);

INSERT INTO public."Clientes" ("Id","Limite","Saldoinicial") VALUES
	 (1,-100000,0),
	 (2,-80000,0),
	 (3,-1000000,0),
	 (4,-10000000,0),
	 (5,-500000,0);

CREATE TABLE public."Transacoes" (
	"Id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"Valor" int8 NULL,
	"Tipo" varchar(1) NULL,
	"Descricao" varchar(100) NULL,
	"IdCliente" int4 NULL,
	"Realizada_em" timestamptz NULL,
	CONSTRAINT "PK_Transacoes" PRIMARY KEY ("Id"),
	CONSTRAINT "FK_Transacoes_Clientes_IdCliente" FOREIGN KEY ("IdCliente") REFERENCES public."Clientes"("Id")
);
CREATE INDEX "IX_Transacoes_IdCliente" ON public."Transacoes" USING btree ("IdCliente");


CREATE OR REPLACE function  atualizar_saldo_credito(cliente_id INTEGER, valor int8, descricao varchar(100))
RETURNS int8 
LANGUAGE plpgsql
AS $$
DECLARE
    saldo_atual int8;
BEGIN
  UPDATE "Clientes" SET "Saldoinicial" = "Saldoinicial" + valor WHERE "Id" = cliente_id
  RETURNING "Saldoinicial" into saldo_atual;

  INSERT INTO "Transacoes" ("Valor", "Tipo", "Descricao", "IdCliente", "Realizada_em")
  VALUES( valor, 'c', descricao, cliente_id, now());

  RETURN saldo_atual;
END;
$$;

CREATE OR REPLACE function  atualizar_saldo_debito(cliente_id INTEGER, valor int8, descricao varchar(100))
RETURNS int8 
LANGUAGE plpgsql
AS $$
DECLARE
    saldo_atual int8;
BEGIN
    UPDATE "Clientes" SET "Saldoinicial" = "Saldoinicial"  - valor WHERE "Id" = cliente_id AND "Saldoinicial" - valor > "Limite"
    RETURNING "Saldoinicial" into saldo_atual;
   IF saldo_atual IS NOT NULL THEN
		INSERT INTO "Transacoes" ("Valor", "Tipo", "Descricao", "IdCliente", "Realizada_em")
		VALUES( valor, 'd', descricao, cliente_id, now());
   END IF;
   RETURN saldo_atual;
END;
$$;