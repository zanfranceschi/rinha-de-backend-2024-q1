version: '3.5'

services:
  api1: &api
    image: juniorleaoo/rinha-http4k-native:latest
    hostname: api1
    platform: linux/amd64
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATASOURCE_URL=jdbc:postgresql://localhost:5432/app
      - DATASOURCE_USERNAME=admin
      - DATASOURCE_PASSWORD=123456
      - MAX_CONNECTION_POOL_SIZE=60
      - SERVER_PORT=3000
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '60MB'

  api2:
    <<: *api
    hostname: api2
    environment:
      - DATASOURCE_URL=jdbc:postgresql://localhost:5432/app
      - DATASOURCE_USERNAME=admin
      - DATASOURCE_PASSWORD=123456
      - MAX_CONNECTION_POOL_SIZE=60
      - SERVER_PORT=3001

  lbk:
    image: juniorleaoo/rinha-lbk:latest
    depends_on:
      - api1
      - api2
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '40MB'

  db:
    image: postgres:16.2-alpine
    command: 'postgres -c synchronous_commit=off -c max_connections=150 -c fsync=off -c full_page_writes=off'
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
    network_mode: host
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U admin -d app'" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: '390MB'