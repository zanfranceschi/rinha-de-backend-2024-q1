version: "3.5"

services:
  api01: &api
    image: rdenadai/rinha-backend-2024q1:latest
    hostname: api01
    restart: on-failure
    environment:
      - DB_HOSTNAME=db
    ports:
      - "8081:8080"
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    logging:
      driver: none
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "120MB"

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    hostname: api02
    environment:
      - DB_HOSTNAME=db
    ports:
      - "8082:8080"

  nginx:
    image: nginx:stable-alpine3.17-slim
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    logging:
      driver: none
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "100MB"

  db:
    image: postgres:16.1-alpine3.19
    hostname: db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    logging:
      driver: none
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./config/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "210MB"

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
