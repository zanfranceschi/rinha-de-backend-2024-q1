version: "3.6"

services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_LOG_STATEMENT: all
      POSTGRES_LOG_DIRECTORY: /var/log/postgresql/
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/create_db.sql
    command: postgres -c 'max_connections=500' -c 'full_page_writes=off' -c 'fsync=off' -c 'synchronous_commit=off' -c 'effective_io_concurrency=4' -c 'shared_buffers=230MB' -c 'checkpoint_timeout=1d' -c 'checkpoint_completion_target=0.9' -c 'wal_buffers=16MB' -c 'log_min_messages=panic' -c 'log_min_error_statement=panic'
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "250MB"


  app1: &app
    container_name: rinha-backend-api-01
    #build: .
    image: goncalvesmail/rinha-backend-q1-24-app:2.0.0
    depends_on:
      - postgres
    environment:
      SPRING.DATASOURCE.URL: "jdbc:postgresql://postgres:5432/postgres"
      SPRING.DATASOURCE.USERNAME: "postgres"
      SPRING.DATASOURCE.PASSWORD: 123456
    ports:
      - "8080"
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "130MB"

  app2:
    <<: *app
    container_name: rinha-backend-api-02
    hostname: app2

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    ports:
      - "9999:9999"
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "40MB"

networks:
  rinha-network:
    driver: bridge
