services:

  api1:
    container_name: api1
    image: gasparbarancelli/rinha-backend-2024:latest
    network_mode: host
    environment:
      - QUARKUS_HTTP_PORT=8081
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "90MB"

  api2:
    container_name: api2
    image: gasparbarancelli/rinha-backend-2024:latest
    network_mode: host
    environment:
      - QUARKUS_HTTP_PORT=8082
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "90MB"

  envoy:
    container_name: envoy
    image: envoyproxy/envoy:v1.29.1
    network_mode: host
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"
    depends_on:
      - api1
      - api2
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml"]

  db:
    container_name: db
    image: postgres:latest
    network_mode: host
    environment:
      - POSTGRES_PASSWORD=backend
      - POSTGRES_USER=rinha
      - POSTGRES_DB=rinha-backend
    command: 'postgres -c max_connections=1000 -c work_mem=8MB -c hot_standby=off -c shared_buffers=135MB -c checkpoint_timeout=1d -c wal_level=minimal -c synchronous_commit=off -c fsync=off -c full_page_writes=off -c max_wal_senders=0'
    volumes:
      - ./import.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "270MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s