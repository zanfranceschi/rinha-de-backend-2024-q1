version: "3.5"

services:
  api01: &api
    image: docker.io/luizpais/rinha-de-backend-bank:1.0.2
    #image: luizpais/rinha-de-backend-bank:1.0.1
    hostname: api01
    environment:
      - DB_URL=vertx-reactive:postgresql://db:5432/dbrinha
      - DB_USER_NAME=rinha
      - DB_PASSWORD=backend
      - DB_REACTIVE_MAX=10
      - DB_LOG_LEVEL=OFF
      - SERVER_PORT=8088
    ports:
      - "8088:8088"
#    network_mode: host
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "100MB"

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    hostname: api02
    environment:
      - DB_URL=vertx-reactive:postgresql://db:5432/dbrinha
      - DB_USER_NAME=rinha
      - DB_PASSWORD=backend
      - DB_REACTIVE_MAX=10
      - DB_LOG_LEVEL=OFF
      - SERVER_PORT=8089
    ports:
      - "8089:8089"
#    network_mode: host

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      # ObrigatÃ³rio expor/usar a porta 9999 no load balancer!
      - "9999:9999"
#    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "20MB"

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=backend
      - POSTGRES_USER=rinha
      - POSTGRES_DB=dbrinha
    ports:
      - "5432:5432"
    #network_mode: host
    volumes:
      - ./sql/script.sql:/docker-entrypoint-initdb.d/script.sql
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c full_page_writes=0
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "200MB"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
