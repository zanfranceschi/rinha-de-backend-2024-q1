 Network rinha-nginx-2024q1  Creating
 Network rinha-nginx-2024q1  Created
 Container bcaua-db-1  Creating
 Container bcaua-db-1  Created
 Container api02  Creating
 Container api01  Creating
 Container api02  Created
 Container api01  Created
 Container bcaua-nginx-1  Creating
 Container bcaua-nginx-1  Created
Attaching to api01, api02, db-1, nginx-1
db-1     | The files belonging to this database system will be owned by user "postgres".
db-1     | This user must also own the server process.
db-1     | 
db-1     | The database cluster will be initialized with locale "en_US.utf8".
db-1     | The default database encoding has accordingly been set to "UTF8".
db-1     | The default text search configuration will be set to "english".
db-1     | 
db-1     | Data page checksums are disabled.
db-1     | 
db-1     | fixing permissions on existing directory /var/lib/postgresql/data ... ok
db-1     | creating subdirectories ... ok
db-1     | selecting dynamic shared memory implementation ... posix
db-1     | selecting default max_connections ... 100
db-1     | selecting default shared_buffers ... 128MB
db-1     | selecting default time zone ... Etc/UTC
db-1     | creating configuration files ... ok
db-1     | running bootstrap script ... ok
db-1     | performing post-bootstrap initialization ... ok
nginx-1  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
nginx-1  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
nginx-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
api01    | warn: Microsoft.AspNetCore.Hosting.Diagnostics[15]
api01    |       Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead 'http://+:3000'.
api02    | warn: Microsoft.AspNetCore.Hosting.Diagnostics[15]
api02    |       Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead 'http://+:3000'.
nginx-1  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
nginx-1  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
nginx-1  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
nginx-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
nginx-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
nginx-1  | /docker-entrypoint.sh: Configuration complete; ready for start up
api01    | info: Microsoft.Hosting.Lifetime[14]
api01    |       Now listening on: http://[::]:3000
api01    | info: Microsoft.Hosting.Lifetime[0]
api01    |       Application started. Press Ctrl+C to shut down.
api01    | info: Microsoft.Hosting.Lifetime[0]
api01    |       Hosting environment: Production
api01    | info: Microsoft.Hosting.Lifetime[0]
api01    |       Content root path: /app
db-1     | syncing data to disk ... ok
db-1     | 
db-1     | 
db-1     | Success. You can now start the database server using:
db-1     | 
db-1     |     pg_ctl -D /var/lib/postgresql/data -l logfile start
db-1     | 
db-1     | initdb: warning: enabling "trust" authentication for local connections
db-1     | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
api02    | info: Microsoft.Hosting.Lifetime[14]
api02    |       Now listening on: http://[::]:3000
api02    | info: Microsoft.Hosting.Lifetime[0]
api02    |       Application started. Press Ctrl+C to shut down.
api02    | info: Microsoft.Hosting.Lifetime[0]
api02    |       Hosting environment: Production
api02    | info: Microsoft.Hosting.Lifetime[0]
api02    |       Content root path: /app
db-1     | waiting for server to start....2024-02-11 21:16:18.910 UTC [48] LOG:  starting PostgreSQL 16.1 (Debian 16.1-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
db-1     | 2024-02-11 21:16:18.921 UTC [48] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
db-1     | 2024-02-11 21:16:18.956 UTC [51] LOG:  database system was shut down at 2024-02-11 21:16:18 UTC
db-1     | 2024-02-11 21:16:18.970 UTC [48] LOG:  database system is ready to accept connections
db-1     |  done
db-1     | server started
db-1     | CREATE DATABASE
db-1     | 
db-1     | 
db-1     | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/postgres.conf
db-1     | 
db-1     | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/script.sql
db-1     | CREATE TABLE
db-1     | CREATE TABLE
db-1     | INSERT 0 5
db-1     | CREATE PROCEDURE
db-1     | 
db-1     | 
db-1     | waiting for server to shut down...2024-02-11 21:16:19.315 UTC [48] LOG:  received fast shutdown request
db-1     | .2024-02-11 21:16:19.317 UTC [48] LOG:  aborting any active transactions
db-1     | 2024-02-11 21:16:19.320 UTC [48] LOG:  background worker "logical replication launcher" (PID 54) exited with exit code 1
db-1     | 2024-02-11 21:16:19.321 UTC [49] LOG:  shutting down
db-1     | 2024-02-11 21:16:19.323 UTC [49] LOG:  checkpoint starting: shutdown immediate
db-1     | 2024-02-11 21:16:19.457 UTC [49] LOG:  checkpoint complete: wrote 940 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.093 s, sync=0.034 s, total=0.137 s; sync files=313, longest=0.005 s, average=0.001 s; distance=4296 kB, estimate=4296 kB; lsn=0/191CC90, redo lsn=0/191CC90
db-1     | 2024-02-11 21:16:19.465 UTC [48] LOG:  database system is shut down
db-1     |  done
db-1     | server stopped
db-1     | 
db-1     | PostgreSQL init process complete; ready for start up.
db-1     | 
db-1     | 2024-02-11 21:16:19.551 UTC [1] LOG:  starting PostgreSQL 16.1 (Debian 16.1-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
db-1     | 2024-02-11 21:16:19.552 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
db-1     | 2024-02-11 21:16:19.552 UTC [1] LOG:  listening on IPv6 address "::", port 5432
db-1     | 2024-02-11 21:16:19.556 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
db-1     | 2024-02-11 21:16:19.563 UTC [66] LOG:  database system was shut down at 2024-02-11 21:16:19 UTC
db-1     | 2024-02-11 21:16:19.570 UTC [1] LOG:  database system is ready to accept connections
db-1     | 2024-02-11 21:18:38.814 UTC [176] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:38.822 UTC [174] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:38.826 UTC [177] FATAL:  sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:39.426 UTC [185] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.426 UTC [191] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.427 UTC [189] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.427 UTC [181] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.428 UTC [184] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.428 UTC [193] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.505 UTC [210] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.505 UTC [213] FATAL:  sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:39.527 UTC [221] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.527 UTC [220] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.527 UTC [219] FATAL:  sorry, too many clients already
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52J", Request id "0HN1B8QRHH52J:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:39.714 UTC [208] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.714 UTC [211] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.717 UTC [212] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.718 UTC [216] FATAL:  sorry, too many clients already
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52I", Request id "0HN1B8QRHH52I:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:39.805 UTC [218] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.805 UTC [217] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.806 UTC [214] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.806 UTC [215] FATAL:  sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:39.909 UTC [223] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.911 UTC [226] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.912 UTC [225] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.913 UTC [224] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.913 UTC [228] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.913 UTC [227] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:39.913 UTC [229] FATAL:  sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:40.014 UTC [232] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.015 UTC [234] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.027 UTC [239] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.028 UTC [246] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.028 UTC [245] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.028 UTC [244] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.032 UTC [241] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.033 UTC [240] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.033 UTC [236] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.033 UTC [238] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.034 UTC [235] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.034 UTC [233] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.035 UTC [231] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.036 UTC [230] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.037 UTC [237] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.038 UTC [243] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.029 UTC [242] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.102 UTC [247] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.118 UTC [251] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.134 UTC [253] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.147 UTC [250] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.148 UTC [249] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.148 UTC [252] FATAL:  sorry, too many clients already
db-1     | 2024-02-11 21:18:40.165 UTC [248] FATAL:  sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:40.304 UTC [258] FATAL:  sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52K", Request id "0HN1B8QRHH52K:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52M", Request id "0HN1B8QRHH52M:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52N", Request id "0HN1B8QRHH52N:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | 53300: sorry, too many clients already
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52O", Request id "0HN1B8QRHH52O:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | 53300: sorry, too many clients already
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52R", Request id "0HN1B8QRHH52R:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH52L", Request id "0HN1B8QRHH52L:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH51S", Request id "0HN1B8QRHH51S:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH524", Request id "0HN1B8QRHH524:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
db-1     | 2024-02-11 21:18:41.524 UTC [256] FATAL:  sorry, too many clients already
api02    | 53300: sorry, too many clients already
db-1     | 2024-02-11 21:18:41.526 UTC [255] FATAL:  sorry, too many clients already
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH521", Request id "0HN1B8QRHH521:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH51T", Request id "0HN1B8QRHH51T:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
api02    |          at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in /source/Program.cs:line 26
api02    |       --- End of stack trace from previous location ---
api02    |          at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
api02    |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
api02    |         Exception data:
api02    |           Severity: FATAL
api02    |           SqlState: 53300
api02    |           MessageText: sorry, too many clients already
api02    |           File: proc.c
api02    |           Line: 351
api02    |           Routine: InitProcess
api02    | fail: Microsoft.AspNetCore.Server.Kestrel[13]
api02    |       Connection id "0HN1B8QRHH51V", Request id "0HN1B8QRHH51V:00000001": An unhandled exception was thrown by the application.
api02    |       Npgsql.PostgresException (0x80004005): 53300: sorry, too many clients already
api02    |          at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
api02    |          at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
api02    |          at Npgsql.Internal.NpgsqlConnector.Authenticate(String username, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
api02    |          at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.PoolingDataSource.<Get>g__RentAsync|34_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
api02    |          at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
api02    |          at api.services.ClienteRepository.CreateTransacao(Int32 clienteId, Int32 transacaoValor, Int32 novoSaldo, TransacaoRequest transacao) in /source/services/ClienteRepository.cs:line 58
api02    |          at api.services.ClientesService.Transacao(Int32 id, TransacaoRequest transacao) in /source/services/ClientesService.cs:line 51
