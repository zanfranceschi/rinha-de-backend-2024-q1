version: "3.5"

networks:
  rinha-network:

services:
  api01:
    image: hfurlan/rinha-backend-2024-q1:1.1.0-java
    #image: rinha-backend-2024-q1-java
    hostname: api01
    environment:
      - DB_HOSTNAME=db
      - DB_USER=admin
      - DB_PASSWORD=123
      - DB_NAME=rinha
      - HTTP_PORT=8081
      - DB_MAX_CONNECTIONS=5
      - HTTP_MAX_THREADS=5
      - JVM_OPTS=-Xmx80m -Xms80m
    ports:
      - "8081:8081"
    depends_on:
      - db
    restart: on-failure
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "100MB"

  api02:
    image: hfurlan/rinha-backend-2024-q1:1.1.0-java
    #image: rinha-backend-2024-q1-java
    hostname: api02
    environment:
      - DB_HOSTNAME=db
      - DB_USER=admin
      - DB_PASSWORD=123
      - DB_NAME=rinha
      - HTTP_PORT=8082
      - DB_MAX_CONNECTIONS=5
      - HTTP_MAX_THREADS=5
    ports:
      - "8082:8082"
    depends_on:
      - db
    restart: on-failure
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "100MB"
 
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    restart: on-failure
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "50MB"

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    networks:
      - rinha-network
    volumes:
      - ./sql/ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
      - ./sql/dml.sql:/docker-entrypoint-initdb.d/dml.sql
    command: postgres -c max_connections=25 -c log_error_verbosity='TERSE' -c log_min_error_statement='LOG' 
    deploy: 
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.5"
          memory: "300MB"

  # pgadmin:
  #   container_name: pgadmin4_container
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - rinha-network
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
# networks:
#   default:
#     driver: bridge
#     name: rinha-nginx-2024q1

# volumes:
#   pgadmin-data:
