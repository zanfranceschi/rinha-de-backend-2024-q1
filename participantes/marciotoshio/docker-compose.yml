services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    restart: on-failure
    image: k4cid/rinha-de-backend-2024-q1-amd64:latest
    hostname: api01
    container_name: rinhaapi01
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/rinha
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "120MB"

  api02:
    <<: *api
    hostname: api02
    container_name: rinhaapi02
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/rinha

  nginx:
    image: nginx:latest
    container_name: rinhanginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
        # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "10MB"

  db:
    image: postgres:latest
    hostname: db
    container_name: rinhadb
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "300MB"
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "postgres"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 15s
      start_interval: 1s

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
