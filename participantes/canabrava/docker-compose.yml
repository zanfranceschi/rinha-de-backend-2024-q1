version: '3.9'

services:
  api1: &api
    image: leandronsp/canabrava
    container_name: api1
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '100MB'

  api2: 
    <<: *api
    container_name: api2

  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '100MB'

  pgbouncer:
    image: pgbouncer/pgbouncer
    hostname: pgbouncer
    container_name: pgbouncer
    environment:
      - DATABASES_HOST=postgres
      - DATABASES_PORT=5432
      - DATABASES_USER=postgres
      - DATABASES_PASSWORD=postgres
      - DATABASES_DBNAME=postgres
      - DATABASES_POOL_SIZE=30
      - PGBOUNCER_MAX_CLIENT_CONN=30
      - PGBOUNCER_RESERVE_POOL_SIZE=30
      - PGBOUNCER_DEFAULT_POOL_SIZE=30
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '50MB'

  nginx:
    image: nginx 
    container_name: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 9999:9999
    depends_on:
      - pgbouncer
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '50MB'
