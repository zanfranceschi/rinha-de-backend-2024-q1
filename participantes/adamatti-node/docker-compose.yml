version: "3.8"
services:
  api1: &api
    image: ghcr.io/adamatti/rinha-de-backend-2024-q1:node
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - DATABASE_MAX=40
      - PORT=8080      
    ports:
      - 8080:8080
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "225MB"

  api2:
    <<: *api
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - DATABASE_MAX=40
      - PORT=8081
    ports:
      - 8081:8081

  nginx:
    image: nginx:1.25.4
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "50MB"

  db:
    image: postgres:latest
    hostname: db
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0 -c log_min_messages=panic -c log_min_error_statement=panic -c log_min_duration_statement=-1 -c log_min_duration_sample=-1
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./seed.sql:/docker-entrypoint-initdb.d/seed.sql
      #  - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

networks:
  default:
    driver: bridge
    name: rinha-backend-y24q1

