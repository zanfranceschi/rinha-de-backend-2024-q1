version: "3.5"

services:
  api01: &api
    image: andre237/api-rinha-spring-sync:0.0.2
    hostname: api01
    environment:
      - DB_HOSTNAME=db
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "150MB"
  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    hostname: api02
    environment:
      - DB_HOSTNAME=db
    expose:
      - "8080"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "10MB"

  db:
    image: postgres:latest
    hostname: db
    environment:
      PGUSER: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    expose:
      - "5432"
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.6"
          memory: "240MB"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
