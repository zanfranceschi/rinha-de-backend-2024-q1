 Container db  Creating
 Container db  Created
 Container api2  Creating
 Container api1  Creating
 Container api2  Created
 Container api1  Created
 Container loadbalancer  Creating
 Container loadbalancer  Created
Attaching to api1, api2, db, loadbalancer
db            | The files belonging to this database system will be owned by user "postgres".
db            | This user must also own the server process.
db            | 
db            | The database cluster will be initialized with locale "en_US.utf8".
db            | The default database encoding has accordingly been set to "UTF8".
db            | The default text search configuration will be set to "english".
db            | 
db            | Data page checksums are disabled.
db            | 
db            | fixing permissions on existing directory /var/lib/postgresql/data ... ok
db            | creating subdirectories ... ok
db            | selecting dynamic shared memory implementation ... posix
db            | selecting default max_connections ... 100
db            | selecting default shared_buffers ... 128MB
db            | selecting default time zone ... UTC
db            | creating configuration files ... ok
db            | running bootstrap script ... ok
db            | sh: locale: not found
db            | 2024-02-21 00:17:55.550 UTC [30] WARNING:  no usable system locales were found
db            | performing post-bootstrap initialization ... ok
db            | syncing data to disk ... ok
db            | 
db            | 
db            | Success. You can now start the database server using:
db            | 
db            |     pg_ctl -D /var/lib/postgresql/data -l logfile start
db            | 
db            | initdb: warning: enabling "trust" authentication for local connections
db            | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
db            | waiting for server to start.... done
db            | server started
db            | CREATE DATABASE
db            | 
db            | 
db            | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/1-init.sql
db            | psql:/docker-entrypoint-initdb.d/1-init.sql:1: NOTICE:  table "transacoes" does not exist, skipping
db            | DROP TABLE
db            | psql:/docker-entrypoint-initdb.d/1-init.sql:2: NOTICE:  table "clientes" does not exist, skipping
db            | DROP TABLE
db            | CREATE TABLE
db            | CREATE TABLE
db            | CREATE INDEX
db            | DO
db            | 
db            | 
db            | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/2-functions.sql
db            | DROP FUNCTION
db            | psql:/docker-entrypoint-initdb.d/2-functions.sql:1: NOTICE:  function obter_extrato() does not exist, skipping
db            | CREATE FUNCTION
db            | DROP FUNCTION
db            | psql:/docker-entrypoint-initdb.d/2-functions.sql:81: NOTICE:  function criar_transacao() does not exist, skipping
db            | CREATE FUNCTION
db            | 
db            | 
db            | waiting for server to shut down.... done
db            | server stopped
db            | 
db            | PostgreSQL init process complete; ready for start up.
db            | 
loadbalancer  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
loadbalancer  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
loadbalancer  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
loadbalancer  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
loadbalancer  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
loadbalancer  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
loadbalancer  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
loadbalancer  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
loadbalancer  | /docker-entrypoint.sh: Configuration complete; ready for start up
loadbalancer exited with code 0
loadbalancer exited with code 0
api1 exited with code 0
api1 exited with code 0
api2 exited with code 0
api2 exited with code 0
db exited with code 0
