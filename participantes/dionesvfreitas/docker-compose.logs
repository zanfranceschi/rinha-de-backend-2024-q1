 Network rinha-de-backend-2024-q1-node  Creating
 Network rinha-de-backend-2024-q1-node  Created
 Container rinhadb  Creating
 Container rinhadb  Created
 Container api02  Creating
 Container api01  Creating
 Container api01  Created
 Container api02  Created
 Container loadbalancer  Creating
 Container loadbalancer  Created
Attaching to api01, api02, loadbalancer, rinhadb
rinhadb       | The files belonging to this database system will be owned by user "postgres".
rinhadb       | This user must also own the server process.
rinhadb       | 
rinhadb       | The database cluster will be initialized with locale "en_US.utf8".
rinhadb       | The default database encoding has accordingly been set to "UTF8".
rinhadb       | The default text search configuration will be set to "english".
rinhadb       | 
rinhadb       | Data page checksums are disabled.
rinhadb       | 
rinhadb       | fixing permissions on existing directory /var/lib/postgresql/data ... ok
rinhadb       | creating subdirectories ... ok
rinhadb       | selecting dynamic shared memory implementation ... posix
rinhadb       | selecting default max_connections ... 100
rinhadb       | selecting default shared_buffers ... 128MB
rinhadb       | selecting default time zone ... UTC
rinhadb       | creating configuration files ... ok
rinhadb       | running bootstrap script ... ok
rinhadb       | sh: locale: not found
rinhadb       | 2024-02-29 15:42:23.769 UTC [30] WARNING:  no usable system locales were found
rinhadb       | performing post-bootstrap initialization ... ok
api02         | Server listening at http://0.0.0.0:8080
api01         | Server listening at http://0.0.0.0:8080
rinhadb       | syncing data to disk ... ok
rinhadb       | 
rinhadb       | 
rinhadb       | Success. You can now start the database server using:
rinhadb       | 
rinhadb       |     pg_ctl -D /var/lib/postgresql/data -l logfile start
rinhadb       | 
rinhadb       | initdb: warning: enabling "trust" authentication for local connections
rinhadb       | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
rinhadb       | waiting for server to start.... done
rinhadb       | server started
rinhadb       | CREATE DATABASE
rinhadb       | 
rinhadb       | 
rinhadb       | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/script.sql
rinhadb       | CREATE TABLE
rinhadb       | CREATE TABLE
rinhadb       | CREATE INDEX
rinhadb       | DO
rinhadb       | 
rinhadb       | 
rinhadb       | waiting for server to shut down.... done
rinhadb       | server stopped
rinhadb       | 
rinhadb       | PostgreSQL init process complete; ready for start up.
rinhadb       | 
loadbalancer  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
loadbalancer  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
loadbalancer  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
loadbalancer  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
loadbalancer  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
loadbalancer  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
loadbalancer  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
loadbalancer  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
loadbalancer  | /docker-entrypoint.sh: Configuration complete; ready for start up
loadbalancer exited with code 0
loadbalancer exited with code 0
api02 exited with code 0
api02 exited with code 137
api01 exited with code 0
api01 exited with code 137
rinhadb exited with code 0
