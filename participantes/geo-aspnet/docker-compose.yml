version: "3.5"

services:
  api01: &api   
    image: geovanebelisario/rinha-de-backend-2024-q1:latest
    hostname: api01
    environment:
      - "ConnectionStrings:DefaultConnection=Server=db;Port=5432;Database=RinhaBackend;User Id=admin;Password=123;Pooling=true;Minimum Pool Size=5;Maximum Pool Size=10;Multiplexing=true;Timeout=15;Command Timeout=15;Cancellation Timeout=-1;No Reset On Close=false;Max Auto Prepare=60;Auto Prepare Min Usages=1;"
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "100MB"
    
  api02:
    <<: *api
    hostname: api02
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8082:8080"

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"
      
  db:
    image: postgres:16-alpine
    hostname: db    
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=RinhaBackend
    ports:
      - "5432:5432"
    volumes:      
      - ./deploy/sql:/docker-entrypoint-initdb.d
    command: postgres -c max_connections=200 -c synchronous_commit=off -c fsync=off -c full_page_writes=off -c effective_io_concurrency=200 -c wal_level=minimal -c max_wal_senders=0 -c shared_buffers=128MB -c effective_cache_size=256MB -c checkpoint_timeout=30min
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d RinhaBackend']
      interval: 3s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "300MB"
    
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1