version: "3"
## run command: docker-compose --compatibility --file docker-compose-stress-test.yml up --force-recreate --buid
services:
  app1: &app
    image: docker.io/weirichvitor/java-rinha-2024-q1-graalvm:latest
    hostname: app1
    command: ["./backend", "--server.port=8083"]
    expose:
      - "8083"
    network_mode: host
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/postgres"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "128MB"
  app2:
    <<: *app
    hostname: app2
    command: ["./backend", "--server.port=8084"]
    expose:
      - "8084"

  postgres:
    image: postgres:latest
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    network_mode: host
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
    deploy:
      resources:
        limits:
          cpus: "1.06"
          memory: "252MB"

  nginx: # Load Balancer
    image: nginx:latest
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.04"
          memory: "42MB"
