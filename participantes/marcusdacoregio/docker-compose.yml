version: "3.5"

services:
  api01: &api
    image: marcusdacoregio/rinha-api:latest
    hostname: api01
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/rinha?loggerLevel=OFF
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=15
      - SPRING_DATASOURCE_HIKARI_INITIALIZATION-FAIL-TIMEOUT=40000
      - SERVER_SHUTDOWN=graceful
    ports:
      - "8080"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "190MB"

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    hostname: api02
    environment:
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/rinha?loggerLevel=OFF
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=15
      - SPRING_DATASOURCE_HIKARI_INITIALIZATION-FAIL-TIMEOUT=40000
      - SERVER_SHUTDOWN=graceful
    ports:
      - "8081"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "60MB"

  db:
    image: postgres:16.1
    hostname: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.3"
          memory: "110MB"

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
    name: rinha-gateway-2024q1
