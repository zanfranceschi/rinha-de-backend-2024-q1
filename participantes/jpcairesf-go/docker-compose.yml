version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:16.1-alpine
    network_mode: host
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "rinha"]
      interval: 2s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: "0.62"
          memory: "390MB"

  rinha1:
    container_name: rinhago1
    hostname: rinha1
    image: jpcairesf/rinha-2024-q1-go:latest
    network_mode: host
    environment:
      RINHA_PORT: 8081
    pull_policy: always
    #   ports:
    #     - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.32"
          memory: "70MB"

  rinha2:
    container_name: rinhago2
    hostname: rinha2
    image: jpcairesf/rinha-2024-q1-go:latest
    network_mode: host
    environment:
      RINHA_PORT: 8082
    pull_policy: always
    #   ports:
    #     - "8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.32"
          memory: "70MB"

  nginx:
    image: nginx:1.25.3-alpine
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rinha1
      - rinha2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.24"
          memory: "20MB"

