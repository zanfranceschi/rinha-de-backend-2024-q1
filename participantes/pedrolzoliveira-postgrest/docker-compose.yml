version: "3.5"

services:
  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c max_connections=1000
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "250MB"

  postgrest01: &postgrest01
    image: postgrest/postgrest:latest
    hostname: postgrest1
    environment:
      - PGRST_DB_URI=postgres://postgres:1234@host.docker.internal:5432/rinha
      - PGRST_DB_SCHEMAS=api
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_SERVER_PORT=3000
      - PGRST_DB_POOL=50
      - PGRST_DB_POOL_ACQUISITION_TIMEOUT=1
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "125MB"
  postgrest02:
    <<: *postgrest01
    hostname: postgrest2
    ports:
      - "3002:3000"
  nginx:
    image: openresty/openresty:alpine
    volumes:
      - ./custom.conf:/etc/nginx/conf.d/custom.conf:ro
    depends_on:
      - postgrest01
      - postgrest02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "50MB"


