version: '3.5'

services:
  api01: &api
    image: dockermarcusxavier/rinha-backend-2024-q1:latest
    environment:
      HTTP_PORT: 9997
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: '50MB'
    network_mode: "host"

  api02:
    <<: *api
    environment:
      HTTP_PORT: 9998
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

  nginx:
    image: nginx:latest
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    network_mode: "host"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '50MB'

  db:
    image: postgres
    hostname: db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    volumes:
      - ./.docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.docker/postgres/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 25s
    command:
      [
        "postgres",
        "-c",
        "config_file=/docker-entrypoint-initdb.d/postgresql.conf",
      ]
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: '400MB'
