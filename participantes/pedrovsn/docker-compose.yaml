version: "3.5"

services:
  api01: &api
    image: pedrovsn/rinha-de-backend-2024-q1-spring:build-1
    hostname: api01
    environment:
      - JDBC_CONNECTION=jdbc:postgresql://db:5432/rinha
      - DB_USER=admin
      - DB_PASSWORD=123
    ports:
      - "8095:8090"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: ".35"
          memory: "100MB"

  api02:
    <<: *api
    hostname: api02
    ports:
      - "8096:8090"

  nginx:
    image: docker.io/nginx:1.25
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: ".4"
          memory: "100MB"

  db:
    image: docker.io/postgres:16
    hostname: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5433:5432"
    volumes:
      - ./conf/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./conf/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: ".4"
          memory: "250MB"

networks:
  default:
    name: rinha-nginx-2024q1