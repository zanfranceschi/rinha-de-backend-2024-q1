 Container postgres_python  Creating
 Container postgres_python  Created
 Container api2_python  Creating
 Container api1_python  Creating
 Container api1_python  Created
 Container api2_python  Created
 Container nginx_python  Creating
 Container nginx_python  Created
Attaching to api1_python, api2_python, nginx_python, postgres_python
postgres_python  | The files belonging to this database system will be owned by user "postgres".
postgres_python  | This user must also own the server process.
postgres_python  | 
postgres_python  | The database cluster will be initialized with locale "en_US.utf8".
postgres_python  | The default database encoding has accordingly been set to "UTF8".
postgres_python  | The default text search configuration will be set to "english".
postgres_python  | 
postgres_python  | Data page checksums are disabled.
postgres_python  | 
postgres_python  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres_python  | creating subdirectories ... ok
postgres_python  | selecting dynamic shared memory implementation ... posix
postgres_python  | selecting default max_connections ... 100
postgres_python  | selecting default shared_buffers ... 128MB
postgres_python  | selecting default time zone ... Etc/UTC
postgres_python  | creating configuration files ... ok
postgres_python  | running bootstrap script ... ok
postgres_python  | performing post-bootstrap initialization ... ok
postgres_python  | syncing data to disk ... ok
postgres_python  | 
postgres_python  | 
postgres_python  | Success. You can now start the database server using:
postgres_python  | 
postgres_python  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
postgres_python  | 
postgres_python  | initdb: warning: enabling "trust" authentication for local connections
postgres_python  | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
postgres_python  | waiting for server to start.... done
postgres_python  | server started
postgres_python  | CREATE DATABASE
postgres_python  | 
postgres_python  | 
postgres_python  | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
postgres_python  | BEGIN
postgres_python  | CREATE TABLE
postgres_python  | CREATE TABLE
postgres_python  | CREATE INDEX
postgres_python  | CREATE INDEX
postgres_python  | INSERT 0 1
postgres_python  | INSERT 0 1
postgres_python  | INSERT 0 1
postgres_python  | INSERT 0 1
postgres_python  | INSERT 0 1
postgres_python  | CREATE FUNCTION
postgres_python  | CREATE FUNCTION
postgres_python  | COMMIT
postgres_python  | 
postgres_python  | 
postgres_python  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/postgresql.conf
postgres_python  | 
postgres_python  | waiting for server to shut down.... done
postgres_python  | server stopped
postgres_python  | 
postgres_python  | PostgreSQL init process complete; ready for start up.
postgres_python  | 
nginx_python     | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
nginx_python     | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
nginx_python     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
nginx_python     | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
nginx_python     | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
nginx_python     | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
nginx_python     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
nginx_python     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
nginx_python     | /docker-entrypoint.sh: Configuration complete; ready for start up
nginx_python     | 2024/03/06 23:34:08 [error] 29#29: *1 connect() failed (111: Connection refused) while connecting to upstream, client: 127.0.0.1, server: , request: "GET /clientes/1/extrato HTTP/1.1", upstream: "http://127.0.0.1:3001/clientes/1/extrato", host: "localhost:9999"
nginx_python     | 2024/03/06 23:34:08 [error] 29#29: *1 connect() failed (111: Connection refused) while connecting to upstream, client: 127.0.0.1, server: , request: "GET /clientes/1/extrato HTTP/1.1", upstream: "http://127.0.0.1:3002/clientes/1/extrato", host: "localhost:9999"
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] Sanic v23.12.1
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] Goin' Fast @ http://127.0.0.1:3002
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] app: main
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] mode: production, single worker
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] server: sanic, HTTP/1.1
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] python: 3.10.13
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] platform: Linux-6.2.0-1019-azure-x86_64-with
api2_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] packages: sanic-routing==23.12.0
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] Sanic v23.12.1
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] Goin' Fast @ http://127.0.0.1:3001
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] app: main
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] mode: production, single worker
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] server: sanic, HTTP/1.1
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] python: 3.10.13
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] platform: Linux-6.2.0-1019-azure-x86_64-with
api1_python      | [2024-03-06 23:34:09 +0000] [1] [INFO] packages: sanic-routing==23.12.0
nginx_python     | 2024/03/06 23:34:10 [error] 29#29: *4 no live upstreams while connecting to upstream, client: 127.0.0.1, server: , request: "GET /clientes/1/extrato HTTP/1.1", upstream: "http://api/clientes/1/extrato", host: "localhost:9999"
api2_python      | [2024-03-06 23:34:11 +0000] [16] [INFO] Starting worker [16]
api1_python      | [2024-03-06 23:34:11 +0000] [16] [INFO] Starting worker [16]
nginx_python     | 2024/03/06 23:34:12 [error] 29#29: *5 no live upstreams while connecting to upstream, client: 127.0.0.1, server: , request: "GET /clientes/1/extrato HTTP/1.1", upstream: "http://api/clientes/1/extrato", host: "localhost:9999"
nginx_python     | 2024/03/06 23:34:14 [error] 29#29: *6 no live upstreams while connecting to upstream, client: 127.0.0.1, server: , request: "GET /clientes/1/extrato HTTP/1.1", upstream: "http://api/clientes/1/extrato", host: "localhost:9999"
nginx_python     | 2024/03/06 23:34:16 [error] 29#29: *7 no live upstreams while connecting to upstream, client: 127.0.0.1, server: , request: "GET /clientes/1/extrato HTTP/1.1", upstream: "http://api/clientes/1/extrato", host: "localhost:9999"
nginx_python     | 2024/03/06 23:34:18 [error] 29#29: *8 no live upstreams while connecting to upstream, client: 127.0.0.1, server: , request: "GET /clientes/1/extrato HTTP/1.1", upstream: "http://api/clientes/1/extrato", host: "localhost:9999"
nginx_python exited with code 0
nginx_python exited with code 0
api2_python      | [2024-03-06 23:38:32 +0000] [1] [INFO] Received signal SIGTERM. Shutting down.
api2_python      | [2024-03-06 23:38:32 +0000] [16] [INFO] Stopping worker [16]
api2_python      | [2024-03-06 23:38:32 +0000] [16] [INFO] Worker complete [16]
api1_python      | [2024-03-06 23:38:32 +0000] [1] [INFO] Received signal SIGTERM. Shutting down.
api1_python      | [2024-03-06 23:38:32 +0000] [16] [INFO] Stopping worker [16]
api1_python      | [2024-03-06 23:38:32 +0000] [16] [INFO] Worker complete [16]
api1_python      | [2024-03-06 23:38:32 +0000] [1] [INFO] Server Stopped
api2_python      | [2024-03-06 23:38:32 +0000] [1] [INFO] Server Stopped
api1_python exited with code 0
api1_python exited with code 0
api2_python exited with code 0
api2_python exited with code 0
postgres_python exited with code 0
