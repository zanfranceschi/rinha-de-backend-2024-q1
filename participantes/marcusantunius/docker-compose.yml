version: '3.6'
services:
  api1: # API - Instância 01
    container_name: api1
    #image: marcusantunius/rinha:1.0.4 com pool
    image: marcusantunius/rinha-2024-q1:v1
    hostname: api1
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@0.0.0.0:5432/rinha"
      HOST: 0.0.0.0
      PORT: 81
      MAX_CONN: 25
    depends_on:
      - db
    expose:
      - "81"
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '50MB'

  api2: # API - Instância 02
    container_name: api2
    #image: marcusantunius/rinha:1.0.4 com pool
    image: marcusantunius/rinha-2024-q1:v1
    hostname: api2
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@0.0.0.0:5432/rinha"
      HOST: 0.0.0.0
      PORT: 82
      MAX_CONN: 25
    depends_on:
      - db
    expose:
      - "82"
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '50MB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    expose:
      - 9999
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '50MB'

  db: # Banco de dados
    container_name: db
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: rinha
    ports:
      - '5432:5432'
    network_mode: host
    command: postgres -c 'max_connections=100' -c 'shared_buffers=200MB' -c 'fsync=off' -c 'effective_cache_size=512MB' -c 'synchronous_commit=off' -c 'checkpoint_timeout=1d' -c 'max_wal_size=1GB' -c 'full_page_writes=false'
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '400MB'
