version: "3.5"

services:
  api01: &api
    image: gilmardealcantara/golango_rinha
    hostname: api01
    environment:
      - DB_HOSTNAME=db
      - DB_INITIAL_POOL_SIZE=13
      - DB_MAX_POOL_SIZE=13
      - API_USE_DB_FUNC=true
      - PORT=3000
      - APP_NAME=golango_boloso
      - DATABASE_URL=postgres://admin:123@db:5432/rinha
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "80MB"

  api02:
    <<: *api
    hostname: api02
    ports:
      - "3002:3000"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "10MB"

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5433:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c full_page_writes=0 -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "380MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d rinha -U admin"]
      interval: 5s
      timeout: 2s
      retries: 5

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.45.0
  #   container_name: cadvisor
  #   privileged: true
  #   devices:
  #     - /dev/kmsg:/dev/kmsg
  #   volumes:
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /etc/machine-id:/etc/machine-id:ro
  #     - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   # expose:
  #   #   - 8080
  #   networks:
  #     - mon-net
  #   labels:
  #     org.label-schema.group: "monitoring"

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
  # mon-net:
  #   driver: bridge
  #
