version: "3.9"

services:

  api01:
    network_mode: host
    image: caravanacloud/rinhadebackend-native:0.0.2
    hostname: api01
    container_name: api01
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9001/clientes/1/extrato"]
      interval: 2s
      retries: 10
    environment:
      - RINHA_SHARD=0
      - QUARKUS_HTTP_PORT=9001
      - QUARKUS_BANNER_ENABLED=false
      - QUARKUS_HTTP_IDLE_TIMEOUT=45
      - QUARKUS_DATASOURCE_REACTIVE_URL=postgresql://127.0.0.1:5400/rinha
      - QUARKUS_DATASOURCE_REACTIVE_CACHE_PREPARED_STATEMENTS=true
      - QUARKUS_DATASOURCE_REACTIVE_MAX_SIZE=100
      - QUARKUS_DATASOURCE_USERNAME=rinha
      - QUARKUS_DATASOURCE_PASSWORD=123
      - QUARKUS_MICROMETER_ENABLED=false
      - QUARKUS_LOG_LEVEL=ERROR
      - QUARKUS_LOG_CATEGORY__caravanacloud__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__io.quarkus__LEVEL=DEBUG
      - QUARKUS_LOG_CATEGORY__org.postgresql__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__io.netty__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__io.vertx__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__org.jboss__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__org.flyway__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__io.smallreye__LEVEL=INFO
    ports:
      - "9001:9001"
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "120MB"

  api02:
    network_mode: host
    image: caravanacloud/rinhadebackend-native:0.0.2
    hostname: api02
    container_name: api02
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9002/clientes/1/extrato"]
      interval: 2s
      retries: 10
    environment:
      - RINHA_SHARD=1
      - QUARKUS_HTTP_PORT=9002
      - QUARKUS_BANNER_ENABLED=false
      - QUARKUS_HTTP_IDLE_TIMEOUT=45
      - QUARKUS_DATASOURCE_REACTIVE_URL=postgresql://127.0.0.1:5400/rinha
      - QUARKUS_DATASOURCE_REACTIVE_CACHE_PREPARED_STATEMENTS=true
      - QUARKUS_DATASOURCE_REACTIVE_MAX_SIZE=100
      - QUARKUS_DATASOURCE_USERNAME=rinha
      - QUARKUS_DATASOURCE_PASSWORD=123
      - QUARKUS_MICROMETER_ENABLED=false
      - QUARKUS_LOG__LEVEL=ERROR
      - QUARKUS_LOG_CATEGORY__caravanacloud__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__org.postgresql__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__io.netty__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__io.vertx__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__org.jboss__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__org.flyway__LEVEL=INFO
      - QUARKUS_LOG_CATEGORY__io.smallreye__LEVEL=INFO
    ports:
      - "9002:9002"
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "120MB"

  lb:
    hostname: lb
    container_name: lb
    network_mode: host 
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      api01:
        condition: service_healthy
      api02:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9999/clientes/1/extrato"]
      interval: 3s
      retries: 15
    deploy:
      resources:
        limits:
          cpus: "0.18"
          memory: "44MB"

  warmup:
    hostname: warmup
    container_name: warmup
    network_mode: host 
    image: fedora:39
    command: |
      /bin/bash -c "echo 'warmuping'; sleep 5;
        for i in $(seq 1 50);
        do echo -n '.' ;
        curl -s -X GET http://localhost:9999/clientes/5/extrato > /dev/null  &
        curl -s -X POST -H 'Content-Type: application/json' -d '{\"valor\": 0, \"tipo\": \"d\", \"descricao\": \"warmupsh\"}' http:///localhost:9000/clientes/5/transacoes > /dev/null &
      done; echo 'warmup done';"
    deploy:
      resources: 
        limits:
          cpus: "0.02"
          memory: "16MB"

  
  db:
    network_mode: host
    image: postgres:latest
    hostname: db
    container_name: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=rinha
      - POSTGRES_DB=rinha
    ports:
      - "5400:5400"
    expose:
      - "5400"
    volumes:
      - ./init.postgresql.vertx.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: 'postgres -c config_file=/etc/postgresql/postgresql.conf'  
    deploy:
      resources: 
        limits:
          cpus: "0.70"
          memory: "250MB"
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "rinha", "--port", "5400"]
      interval: 3s
      timeout: 2s
      retries: 10
      start_period: 3s


