version: "3.5"

services:
  api01: &api
    image: tiago98751/rinha-backend-2024-q1:latest
    hostname: api01
    network_mode: host
    environment:
      - DB_HOSTNAME=127.0.0.1
      - PORT=:8081
      - API_DATABASE_URI=postgres://rinha:rinha@127.0.0.1:5432/rinha?pool_max_conns=400&pool_min_conns=50
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  api02:
    <<: *api
    hostname: api02
    network_mode: host
    environment:
      - DB_HOSTNAME=127.0.0.1
      - PORT=:8082
      - API_DATABASE_URI=postgres://rinha:rinha@127.0.0.1:5432/rinha?pool_max_conns=400&pool_min_conns=50
    ports:
      - "8082:8080"

  nginx:
    image: nginx:1.25.3
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "10MB"

  db:
    image: postgres:16.2
    hostname: db
    network_mode: host
    command: 'postgres -c log_min_error_statement=panic -c log_min_duration_statement=-1 -c log_min_duration_sample=-1 -c log_min_messages=panic  -c checkpoint_timeout=600 -c max_wal_size=4096 -c max_connections=400 -c shared_buffers=175MB -c effective_io_concurrency=4 -c synchronous_commit=off'
    environment:
      - POSTGRES_PASSWORD=rinha
      - POSTGRES_USER=rinha
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U rinha -d rinha"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.9"
          memory: "440MB"
