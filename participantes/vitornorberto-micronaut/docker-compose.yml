version: "3.5"

services:
  micronaut-db:
    container_name: micronaut-db
    image: postgres:latest
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    environment:
      POSTGRES_PASSWORD: micronaut_db
      POSTGRES_USER: micronaut_db
      POSTGRES_DB: micronaut_db
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d micronaut_db -U micronaut_db" ]
      interval: 5s
      timeout: 5s
      retries: 5  
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.4"
          memory: "435MB"

  micronaut-one: &micronaut-api
    hostname: micronaut-one
    image: nortana/rinha-de-backend-2024-q1-micronaut:latest
    container_name: micronaut-one
    environment:
      datasources.default.url: jdbc:postgresql://micronaut-db:5432/micronaut_db
    ports:
      - "8081:8080"
    depends_on:
      micronaut-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "50MB"

  micronaut-two:
    <<: *micronaut-api
    hostname: micronaut-two
    container_name: micronaut-two
    ports:
      - "8082:8080"

  nginx-micronaut-load-balance:
    container_name: nginx-micronaut-load-balance
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - micronaut-one
      - micronaut-two
      - micronaut-db
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "15MB"

networks:
  default:
    driver: bridge
    name: rinha-nginx-micronaut-2024q1